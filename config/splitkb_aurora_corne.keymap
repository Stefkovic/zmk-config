/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// required for unicode
#define HOST_OS 2

// Urob helpers
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/slovak.dtsi"

#define ___ &trans

#define DEF 0
#define NAV 1
#define NUM 2
#define SVK 3


// Timeless home row mods
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 LT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 LH2 RH0 RH1 RH2                                                  // thumbs

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

// tap: backspace | shift + tap: delete | hold: num layer
ZMK_MOD_MORPH(bs_del_num,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_CONDITIONAL_LAYER(svk, NAV NUM, SVK)




ďáéŕľčáŕšľgľľľľľľľľľľľľľľľľgľľľľľľľľľľľúýňéíó11č111žčďv11k112233221;;;
/* Keymap */

ZMK_LAYER(default_layer,
     // ╭─────────────┬────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────╮
          &kp ESC       &kp Q        &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SQT       ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼────────────┤
          &kp TAB       &hml LGUI A  &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp G             &kp M         &hmr RSHFT N  &hmr LCTRL E  &hmr LALT I   &hmr LGUI O   ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼────────────┤
          ___           &kp Z        &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp SEMI      ___
     // ╰────────────────────────────────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼────────────────────────────────────────╯
                                                    ___          &bs_del_num   &kp RET           &lt NAV SPACE &sk LSHFT     ___
     //                                          ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(nav_layer,
     // ╭─────────────┬────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           ___          ___           ___           ___           ___               &kp PG_UP     &kp HOME      &kp UP        &kp END       ___           ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &sk LGUI     &sk LALT      &sk LCTRL     &sk LSHFT     ___               &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     ___           ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___          ___           ___           ___           ___               ___           ___           ___           ___           ___           ___
     // ╰──────────────────────────────────────────────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────────────────────────────────╯
                                                   ___           ___           ___               ___           ___           ___
     //                                          ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num_layer,
     // ╭─────────────┬────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           &kp ESC      &kp N7        &kp N8        &kp N9        ___               ___           &kp N7        &kp N8        &kp N9        ___           ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &kp TAB      &kp N4        &kp N5        &kp N6        ___               ___           &kp N4        &kp N5        &kp N6        ___           ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___          &kp N1        &kp N2        &kp N3        ___               ___           &kp N1        &kp N2        &kp N3        ___           ___
     // ╰──────────────────────────────────────────────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────────────────────────────────╯
                                                   &kp N0        ___           ___               ___           ___           &kp N0
     //                                          ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(svk,
     // ╭─────────────┬────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           ___          ___           ___           ___           ___               ___           &sk_lc        &sk_ua        &sk_ya        ___           ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &sk_aa       &sk_ra        &sk_sc        &sk_tc        ___               ___           &sk_nc        &sk_ea        &sk_ia        &sk_oa        ___
     // ├─────────────┼────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &sk_zc       ___           &sk_cc        &sk_dc        ___               ___           ___           ___           ___        ___           ___
     // ╰──────────────────────────────────────────────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────────────────────────────────╯
                                                   ___           ___           ___               ___           ___           ___
     //                                          ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
